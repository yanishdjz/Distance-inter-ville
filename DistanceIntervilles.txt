Algorithme "Distance inter-villes" 

(*NOTE : 10 dans Vec_Villes correspond à la taille du tableau*) 

(*NOTE : 10 dans Matrice_Distances correspond à la taille du tableau*) 

Variables indicées : Vec_Villes[10] d'éléments CC, Matrice_Distances[10][10] d'éléments Numériques 

Variables : numériques : PremiereVerification, DeuxiemeVerification, villeDeDepart, villeDarrivee, I, J 

CC : ville1, ville2, reponse 

 

Début 
  

  

(*NOTE : Les vecteurs/matrices sont déjà initialisées dans la mémoire*) 

Vec_Villes[] <- {"Brest", "Grenoble", "Lille", "Lyon", "Marseille", "Nantes", "Paris", "Rennes", "Strasbourg", "Toulouse"} 

Matrice_Distances[][] <- { 

                {0,996,72,890,1286,305,564,245,1026,884}, 

                {0,0,750,104,286,711,576,747,505,543}, 

                {0,0,0,668,979,593,224,515,524,905}, 

                {0,0,0,0,316,607,472,645,434,467}, 

                {0,0,0,0,0,890,769,98,750,400}, 

                {0,0,0,0,0,0,386,106,832,559}, 

                {0,0,0,0,0,0,0,348,447,681}, 

                {0,0,0,0,0,0,0,0,799,665}, 

                {0,0,0,0,0,0,0,0,0,901}, 

                {0,0,0,0,0,0,0,0,0,0} 

        } 

  

PremiereVerification <- 0 
DeuxiemeVerification <- 0 
I <- 0 
J <- 0 

  

TantQue reponse <> "OUI" 

  

	Afficher "Veuillez saisir la ville de départ" 

	Saisir ville1 

	TantQue PremiereVerification <> 1 

 

		Si ville1 = Vec_Villes[I] Alors Afficher "La ville de départ existe belle et bien." 
										villeDeDepart <- I 
										PremiereVerification <- 1 
								  Sinon Si I <> 10 Alors I <- I + 1
								  				   Sinon Afficher "Erreur de saisie : la ville de départ n'existe pas. Veuillez recommencer"
													     Saisir ville1 
													     (*On recommence depuis le début*) 
													     I <- 0 
			  FSI	 
		FSI  
	FTantQue 

 

	TantQue DeuxiemeVerification <> 1 

 

		Si ville2 = Vec_Villes[J] Alors Afficher "La ville d'arrivée existe belle et bien." 
										villeDarrivee <- J 
										(*On casse la boucle*)
										DeuxiemeVerification <- 1 
								  Sinon Si J <> 10 Alors J <- J + 1
												   Sinon Afficher "Erreur de saisie : la ville d'arruvée n'existe pas. Veuillez recommencer"
												   Saisir ville2 
												   (*On recommence depuis le début*) 
												   J <- 0 
						FSI  
		FSI  


		FSI  

	FTantQue 
 

	Si villeDeDepart > villeDarrivee Alors Afficher "La distance entre ", ville1 ," et ", ville2 ," est de ", Matrice_Distances[villeDarrive][villeDeDepart] ," kilomètress." 
									 Sinon Si villeDeDepart < villeDarrivee Alors Afficher "La distance entre ", ville1 ," et ", ville2 ," est de ", Matrice_Distances[villeDeDepart][villeDarrive] ," kilomètress." 
																			Sinon Afficher “Vous avez entrer la même ville” 
										   FSI
    FSI 

	Afficher "Voulez-vous arrêter? Si oui, tapez OUI en majuscule, sinon taper autre choses" 
	Saisir reponse 

 

	(*On réinitialise les variables s'il n'a pas tapé OUI en majuscule pour recommencer afin de purger tout a zéro*) 

	Si reponse <> "OUI" Alors villeDeDepart <- 0 
							  villeDarrive <- 0 
							  I <- 0 
							  J <- 0 
						      PremiereVerification <- 0 
	                          DeuxiemeVerification <- 0 
							  
							  
FTantQue 

 

Fin 